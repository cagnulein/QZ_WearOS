/*
 * Copyright 2021 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "org.cagnulen.qdomyoszwift"
        minSdk 28
        targetSdk 34
        versionCode 10030
        versionName "1.1.13"
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        // Allows to use experimental coroutines APIs like callbackFlow()
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        freeCompilerArgs += "-Xjvm-default=all"
    }
    namespace 'org.cagnulen.qdomyoszwift'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation "androidx.work:work-runtime-ktx:2.9.0"
    implementation "androidx.fragment:fragment-ktx:1.8.1"

    // Hilt dependency injection
    implementation "com.google.dagger:hilt-android:2.49"
    kapt "com.google.dagger:hilt-android-compiler:2.44"
    implementation 'androidx.hilt:hilt-work:1.2.0'
    kapt 'androidx.hilt:hilt-compiler:1.2.0'
    implementation 'com.google.android.gms:play-services-wearable:18.2.0'

    // Wear
    implementation 'androidx.wear:wear:1.3.0'
    // Health Services
    implementation 'androidx.health:health-services-client:1.0.0-rc02'
    // Used to bridge between Futures and coroutines
    implementation 'com.google.guava:guava:31.1-android'
    implementation "androidx.concurrent:concurrent-futures-ktx:1.2.0"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.3"
    implementation "androidx.lifecycle:lifecycle-service:2.8.3"

    // Material
    implementation 'com.google.android.material:material:1.12.0'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.7"
    implementation "androidx.navigation:navigation-ui-ktx:2.7.7"

    // Ongoing Activity
    implementation "androidx.wear:wear-ongoing:1.0.0"
    implementation "androidx.versionedparcelable:versionedparcelable:1.2.0"

    // Startup
    implementation "androidx.core:core-splashscreen:1.1.0-rc01"

    compileOnly 'com.google.android.wearable:wearable:2.9.0'
}

